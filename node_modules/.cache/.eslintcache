[{"E:\\react_amplify_app\\src\\index.js":"1","E:\\react_amplify_app\\src\\reportWebVitals.js":"2","E:\\react_amplify_app\\src\\App.js":"3","E:\\react_amplify_app\\src\\aws-exports.js":"4","E:\\react_amplify_app\\src\\graphql\\queries.js":"5","E:\\react_amplify_app\\src\\graphql\\mutations.js":"6"},{"size":615,"mtime":1626354843716,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1626258455437,"results":"9","hashOfConfig":"8"},{"size":2871,"mtime":1626424084965,"results":"10","hashOfConfig":"8"},{"size":850,"mtime":1626411403665,"results":"11","hashOfConfig":"8"},{"size":622,"mtime":1626411395069,"results":"12","hashOfConfig":"8"},{"size":952,"mtime":1626411395133,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"j5ao3r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"E:\\react_amplify_app\\src\\index.js",[],["28","29"],"E:\\react_amplify_app\\src\\reportWebVitals.js",[],"E:\\react_amplify_app\\src\\App.js",["30","31"],"/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, Storage } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listTodos as listNotes, listTodos } from './graphql/queries';\nimport {\n  createTodo as createNoteMutation,\n  deleteTodo as deleteNoteMutation,\n} from './graphql/mutations';\n\nconst initialFormState = { name: '', description: '' };\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function onChange(e) {\n    if (!e.target.files[0]) return;\n    const file = e.target.files[0];\n    setFormData({ ...formData, image: file.name });\n    await Storage.put(file.name, file);\n    fetchNotes();\n  }\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({ query: listTodos });\n    const notesFromAPI = apiData.data.listTodos.items;\n    await Promise.all(\n      notesFromAPI.map(async (note) => {\n        if (note.image) {\n          const image = await Storage.get(note.image);\n          note.image = image;\n        }\n        return note;\n      })\n    );\n    setNotes(apiData.data.listTodos.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    await API.graphql({\n      query: createNoteMutation,\n      variables: { input: formData },\n    });\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n    setNotes([...notes, formData]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({ id }) {\n    const newNotesArray = notes.filter((note) => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({\n      query: deleteNoteMutation,\n      variables: { input: { id } },\n    });\n  }\n\n  return (\n    <div className='App'>\n      <h1>My Notes App</h1>\n      <input\n        onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n        placeholder='Note name'\n        value={formData.name}\n      />\n      <input\n        onChange={(e) =>\n          setFormData({ ...formData, description: e.target.value })\n        }\n        placeholder='Note description'\n        value={formData.description}\n      />\n      <input type='file' onChange={onChange} />\n      <button onClick={createNote}>Create Note</button>\n      <div style={{ marginBottom: 30 }}>\n        {notes.map((note) => (\n          <div key={note.id || note.name}>\n            <h2>{note.name}</h2>\n            <p>{note.description}</p>\n            <button onClick={() => deleteNote(note)}>Delete note</button>\n            {note.image && <img src={note.image} style={{ width: 400 }} />}\n          </div>\n        ))}\n      </div>\n      <AmplifySignOut />\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n","E:\\react_amplify_app\\src\\aws-exports.js",[],"E:\\react_amplify_app\\src\\graphql\\queries.js",[],"E:\\react_amplify_app\\src\\graphql\\mutations.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":23,"nodeType":"38","messageId":"39","endLine":7,"endColumn":32},{"ruleId":"40","severity":1,"message":"41","line":92,"column":28,"nodeType":"42","endLine":92,"endColumn":75},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'listNotes' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]